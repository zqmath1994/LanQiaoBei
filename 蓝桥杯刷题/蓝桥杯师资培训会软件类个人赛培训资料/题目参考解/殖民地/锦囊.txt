

【试题大意】
给出一个网格图，格子和边都有权（格子权可正可负，边权为正），你要选择一些格子，并用一些边把选的和没选的格子隔开。要求最大化：选的格子的权值和减去选的边的权值和。
【试题分析】
20%的数据是暴力枚举每个格子选不选。50%和100%的数据就都是网络流了，只是实现的好坏。本题可以构造成如下模型：我可以选择一个格子，收益是（格子权值-4 条边权值和），收益可正可负；也可以选择一条边，假设权值为C，那么收益为2C，意思是：我这条边本来应该选两边，但我没选，省了2*C。那么选择一条边的条件就很显然了：它相邻的两个格子都必须选。因此，我们发现，把边和格子都看做图中的点，选择他们有收益（可正可负），并且选了某个点就必须选某些指定的点――这就是最大权闭合子图的模型！所以本题就被化归到一个经典问题上来了，可以用网络流解决。虽然点数很多（120000 左右），但图非常稀疏，标程用SAP 效果非常好，1s 以内出解。
